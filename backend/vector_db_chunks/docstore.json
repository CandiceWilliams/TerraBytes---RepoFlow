{"docstore/metadata": {".gitignore#chunk-1": {"doc_hash": "5c703ec61876a6ad2f86e1a445cac3b38511b372e2d1b4c336933aee005d8935"}, "all_test.sh#chunk-1": {"doc_hash": "568943ed7882499f7237b5c8093fd9b15b7892bb760a30e275c9d6a82451feda"}, "LICENSE#chunk-1": {"doc_hash": "2dffc1bbc823f6dccfb51b6a920a79a38a202367e9cb380aa0bfe396dada9d07"}, "Makefile#chunk-1": {"doc_hash": "062ee649dabe51e293619834e901f1bdacc036ff34bb73e6bee04c822b3c5d0a"}, "Makefile#chunk-2": {"doc_hash": "72c30e86a3b7eff65b8323019c466634a9610032c809b9ac86df361c29bc4ada"}, "requirements.txt#chunk-1": {"doc_hash": "452c172c00b42b50a08dde505de98e8ddfb48a8dd1c19be7e78c667e97930597"}, "935c32ed-bf3c-4251-b1bd-9c4503740cc4": {"doc_hash": "8d2cd1285b7a11bc51ab5b2506fa6d099169014d2ea39a410d6114d8b09fe590", "ref_doc_id": ".gitignore#chunk-1"}, "0ec3a17a-edfc-495d-8c2e-d52f4129ba6e": {"doc_hash": "815422a6326968f8a85eef7e5e3e655bd1f7134540e8dbbd0f46fec5cf3ba09b", "ref_doc_id": "all_test.sh#chunk-1"}, "c9b79344-7f8f-4d22-8f23-61adbff14988": {"doc_hash": "fc8ae768d84d4539cac69da05855895fbf5958aad0f17844530db20336337d15", "ref_doc_id": "LICENSE#chunk-1"}, "dc2f4cd8-a652-4217-b0fc-6eb60dd9382a": {"doc_hash": "4da22587c3135a4ab384d39229839105fa7f154c56636ff4bcd3fa3849468f2c", "ref_doc_id": "Makefile#chunk-1"}, "9a7bffeb-6d5d-4158-a23e-0ecaf51d3576": {"doc_hash": "7f104dc60e632857ce3de69c82d0497feebe1d05b3bac41099f90752ed04692d", "ref_doc_id": "Makefile#chunk-2"}, "12158c4b-a827-4e94-974c-e37e061c906b": {"doc_hash": "1dd3ee3b447a123d970f0ac0eb7eddd9a3319e919a3b865609ad8ce20fca58f5", "ref_doc_id": "requirements.txt#chunk-1"}}, "docstore/ref_doc_info": {".gitignore#chunk-1": {"node_ids": ["935c32ed-bf3c-4251-b1bd-9c4503740cc4"], "metadata": {"file": ".gitignore", "name": "Python cache and temporary files", "description": "Ignores common Python cache directories and temporary files like __pycache__, .pytest_cache, *.swp, *~, .cache, .ipynb_checkpoints, .DS_Store, and .mypy_cache.", "keywords": ["python", "cache", "temporary", "gitignore"]}}, "all_test.sh#chunk-1": {"node_ids": ["0ec3a17a-edfc-495d-8c2e-d52f4129ba6e"], "metadata": {"file": "all_test.sh", "name": "main", "description": "This script is designed to discover and execute sub-test scripts in a hierarchical manner. It finds all `all_test.sh` files located in subdirectories (at least two levels deep from the root) and then sequentially executes them. This allows for a recursive testing structure, where each directory can have its own set of tests that are invoked by a higher-level test runner.", "keywords": ["test", "script", "discovery", "execution", "recursive", "bash"]}}, "LICENSE#chunk-1": {"node_ids": ["c9b79344-7f8f-4d22-8f23-61adbff14988"], "metadata": {"file": "LICENSE", "name": "MIT License", "description": "This chunk contains the full text of the MIT License, a permissive free software license originating at the Massachusetts Institute of Technology. It grants users the freedom to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, with the condition that the copyright notice and permission notice are included in all copies or substantial portions of the Software. It also disclaims warranties and liability.", "keywords": ["license", "MIT", "permissive", "copyright", "software", "distribution"]}}, "Makefile#chunk-1": {"node_ids": ["dc2f4cd8-a652-4217-b0fc-6eb60dd9382a"], "metadata": {"file": "Makefile", "name": "install", "description": "Installs project dependencies by using pip to install packages listed in requirements.txt.", "keywords": ["install", "dependencies", "pip", "requirements"]}}, "Makefile#chunk-2": {"node_ids": ["9a7bffeb-6d5d-4158-a23e-0ecaf51d3576"], "metadata": {"file": "Makefile", "name": "clean", "description": "Cleans up common cache and configuration directories created by Python development tools and IDEs. It finds and removes directories such as .pytest_cache, __pycache__, .vsidea, .idea, and .mypy_cache recursively.", "keywords": ["clean", "cleanup", "cache", "pytest", "pycache", "idea", "mypy"]}}, "requirements.txt#chunk-1": {"node_ids": ["12158c4b-a827-4e94-974c-e37e061c906b"], "metadata": {"file": "requirements.txt", "name": "development_tools", "description": "This section lists essential development tools for maintaining code quality and enabling interactive debugging. It includes linters, formatters, type checkers, and testing frameworks.", "keywords": ["development", "tools", "quality", "linting", "formatting", "testing", "debugging"]}}}, "docstore/data": {"935c32ed-bf3c-4251-b1bd-9c4503740cc4": {"__data__": {"id_": "935c32ed-bf3c-4251-b1bd-9c4503740cc4", "embedding": null, "metadata": {"file": ".gitignore", "name": "Python cache and temporary files", "description": "Ignores common Python cache directories and temporary files like __pycache__, .pytest_cache, *.swp, *~, .cache, .ipynb_checkpoints, .DS_Store, and .mypy_cache.", "keywords": ["python", "cache", "temporary", "gitignore"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": ".gitignore#chunk-1", "node_type": "4", "metadata": {"file": ".gitignore", "name": "Python cache and temporary files", "description": "Ignores common Python cache directories and temporary files like __pycache__, .pytest_cache, *.swp, *~, .cache, .ipynb_checkpoints, .DS_Store, and .mypy_cache.", "keywords": ["python", "cache", "temporary", "gitignore"]}, "hash": "5c703ec61876a6ad2f86e1a445cac3b38511b372e2d1b4c336933aee005d8935", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "__pycache__\n.pytest_cache\n*.swp\n*~\n.cache\n.ipynb_checkpoints\n.DS_Store\n.mypy_cache", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 82, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0ec3a17a-edfc-495d-8c2e-d52f4129ba6e": {"__data__": {"id_": "0ec3a17a-edfc-495d-8c2e-d52f4129ba6e", "embedding": null, "metadata": {"file": "all_test.sh", "name": "main", "description": "This script is designed to discover and execute sub-test scripts in a hierarchical manner. It finds all `all_test.sh` files located in subdirectories (at least two levels deep from the root) and then sequentially executes them. This allows for a recursive testing structure, where each directory can have its own set of tests that are invoked by a higher-level test runner.", "keywords": ["test", "script", "discovery", "execution", "recursive", "bash"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "all_test.sh#chunk-1", "node_type": "4", "metadata": {"file": "all_test.sh", "name": "main", "description": "This script is designed to discover and execute sub-test scripts in a hierarchical manner. It finds all `all_test.sh` files located in subdirectories (at least two levels deep from the root) and then sequentially executes them. This allows for a recursive testing structure, where each directory can have its own set of tests that are invoked by a higher-level test runner.", "keywords": ["test", "script", "discovery", "execution", "recursive", "bash"]}, "hash": "568943ed7882499f7237b5c8093fd9b15b7892bb760a30e275c9d6a82451feda", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#!/usr/bin/env bash\n\nTESTS=$(mktemp)\nfind . -mindepth 2 -maxdepth 2 -name all_test.sh | sort > \"$TESTS\"\n\nwhile read -r TEST; do\n    DIR=$(dirname \"$TEST\")\n    echo -e \"\\n\\n==> $DIR <==\\n\\n\"\n    (cd \"$DIR\" && ./all_test.sh)\ndone < \"$TESTS\"\n\nrm \"$TESTS\"", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 251, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9b79344-7f8f-4d22-8f23-61adbff14988": {"__data__": {"id_": "c9b79344-7f8f-4d22-8f23-61adbff14988", "embedding": null, "metadata": {"file": "LICENSE", "name": "MIT License", "description": "This chunk contains the full text of the MIT License, a permissive free software license originating at the Massachusetts Institute of Technology. It grants users the freedom to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, with the condition that the copyright notice and permission notice are included in all copies or substantial portions of the Software. It also disclaims warranties and liability.", "keywords": ["license", "MIT", "permissive", "copyright", "software", "distribution"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "LICENSE#chunk-1", "node_type": "4", "metadata": {"file": "LICENSE", "name": "MIT License", "description": "This chunk contains the full text of the MIT License, a permissive free software license originating at the Massachusetts Institute of Technology. It grants users the freedom to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, with the condition that the copyright notice and permission notice are included in all copies or substantial portions of the Software. It also disclaims warranties and liability.", "keywords": ["license", "MIT", "permissive", "copyright", "software", "distribution"]}, "hash": "2dffc1bbc823f6dccfb51b6a920a79a38a202367e9cb380aa0bfe396dada9d07", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "MIT License\n\nCopyright (c) 2019 Ken Youens-Clark\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1072, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc2f4cd8-a652-4217-b0fc-6eb60dd9382a": {"__data__": {"id_": "dc2f4cd8-a652-4217-b0fc-6eb60dd9382a", "embedding": null, "metadata": {"file": "Makefile", "name": "install", "description": "Installs project dependencies by using pip to install packages listed in requirements.txt.", "keywords": ["install", "dependencies", "pip", "requirements"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "Makefile#chunk-1", "node_type": "4", "metadata": {"file": "Makefile", "name": "install", "description": "Installs project dependencies by using pip to install packages listed in requirements.txt.", "keywords": ["install", "dependencies", "pip", "requirements"]}, "hash": "062ee649dabe51e293619834e901f1bdacc036ff34bb73e6bee04c822b3c5d0a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "install:\n\tpython3 -m pip install -r requirements.txt", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 52, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9a7bffeb-6d5d-4158-a23e-0ecaf51d3576": {"__data__": {"id_": "9a7bffeb-6d5d-4158-a23e-0ecaf51d3576", "embedding": null, "metadata": {"file": "Makefile", "name": "clean", "description": "Cleans up common cache and configuration directories created by Python development tools and IDEs. It finds and removes directories such as .pytest_cache, __pycache__, .vsidea, .idea, and .mypy_cache recursively.", "keywords": ["clean", "cleanup", "cache", "pytest", "pycache", "idea", "mypy"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "Makefile#chunk-2", "node_type": "4", "metadata": {"file": "Makefile", "name": "clean", "description": "Cleans up common cache and configuration directories created by Python development tools and IDEs. It finds and removes directories such as .pytest_cache, __pycache__, .vsidea, .idea, and .mypy_cache recursively.", "keywords": ["clean", "cleanup", "cache", "pytest", "pycache", "idea", "mypy"]}, "hash": "72c30e86a3b7eff65b8323019c466634a9610032c809b9ac86df361c29bc4ada", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "clean:\n\tfor name in .pytest_cache __pycache__ .vsidea .idea .mypy_cache; do find . -name $$name -exec rm -rf {} \\;; done", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 120, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "12158c4b-a827-4e94-974c-e37e061c906b": {"__data__": {"id_": "12158c4b-a827-4e94-974c-e37e061c906b", "embedding": null, "metadata": {"file": "requirements.txt", "name": "development_tools", "description": "This section lists essential development tools for maintaining code quality and enabling interactive debugging. It includes linters, formatters, type checkers, and testing frameworks.", "keywords": ["development", "tools", "quality", "linting", "formatting", "testing", "debugging"]}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "requirements.txt#chunk-1", "node_type": "4", "metadata": {"file": "requirements.txt", "name": "development_tools", "description": "This section lists essential development tools for maintaining code quality and enabling interactive debugging. It includes linters, formatters, type checkers, and testing frameworks.", "keywords": ["development", "tools", "quality", "linting", "formatting", "testing", "debugging"]}, "hash": "452c172c00b42b50a08dde505de98e8ddfb48a8dd1c19be7e78c667e97930597", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "black\nflake8\nipython\nmypy\npylint\npytest\nyapf", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 44, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}}