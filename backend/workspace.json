[
  {
    "name": "Repository Management",
    "description": "This workspace contains global configuration files, build scripts, license information, and the main project overview.",
    "fileStructure": [
      ".gitignore",
      "all_test.sh",
      "LICENSE",
      "Makefile",
      "README.md",
      "requirements.txt"
    ],
    "returnPrompt": "Explore global project settings and documentation.",
    "assumptions": "These files provide general repository-level functionality and information, not tied to any single coding exercise."
  },
  {
    "name": "Windows Setup Guide",
    "description": "This section provides documentation and utilities specifically for setting up the development environment on Windows systems.",
    "fileStructure": [
      "appendix/Makefile",
      "appendix/SETUP_WINDOWS.adoc",
      "appendix/SETUP_WINDOWS.pdf"
    ],
    "returnPrompt": "Review Windows environment setup instructions.",
    "assumptions": "The files in the 'appendix' directory are dedicated to Windows setup based on their filenames."
  },
  {
    "name": "Argparse Examples Appendix",
    "description": "A collection of supplementary Python examples demonstrating various functionalities of the argparse module.",
    "fileStructure": [
      "appendix_argparse/cat_n.py",
      "appendix_argparse/cat_n_manual.py",
      "appendix_argparse/choices.py",
      "appendix_argparse/manual.py",
      "appendix_argparse/nargs+.py",
      "appendix_argparse/nargs2.py",
      "appendix_argparse/one_arg.py",
      "appendix_argparse/README.md",
      "appendix_argparse/two_args.py"
    ],
    "returnPrompt": "Examine argparse usage examples.",
    "assumptions": "This directory is a dedicated appendix for learning argparse, distinct from the main exercises."
  },
  {
    "name": "Project Scaffolding",
    "description": "This workspace includes tools for generating new project structures and a template for new 'tiny Python projects'.",
    "fileStructure": [
      "bin/new.py",
      "template/template.py"
    ],
    "returnPrompt": "Investigate project creation tools and templates.",
    "assumptions": "The 'new.py' script is likely used to create new chapters based on the 'template.py' file."
  },
  {
    "name": "Docker Environment",
    "description": "Configuration files for running the project within a Docker container, facilitating a consistent development environment.",
    "fileStructure": [
      "docker/Dockerfile",
      "docker/Makefile",
      "docker/README.md"
    ],
    "returnPrompt": "Access Docker container setup files.",
    "assumptions": "These files are solely for Docker-related environment configuration."
  },
  {
    "name": "Centralized Input Files",
    "description": "A repository of shared text files and resources used as inputs for various coding exercises throughout the book.",
    "fileStructure": [
      "inputs/.gitignore",
      "inputs/const.txt",
      "inputs/dickinson.txt",
      "inputs/fox.txt",
      "inputs/gettysburg.txt",
      "inputs/issa.txt",
      "inputs/Makefile",
      "inputs/nobody.txt",
      "inputs/now.txt",
      "inputs/out.txt",
      "inputs/preamble.txt",
      "inputs/scarlet.txt",
      "inputs/sonnet-29.txt",
      "inputs/sonnets.txt",
      "inputs/spiders.txt",
      "inputs/the-bustle.txt",
      "inputs/usdeclar.txt",
      "inputs/words.txt.zip"
    ],
    "returnPrompt": "Browse common input data files.",
    "assumptions": "These files are generic data inputs utilized by multiple exercises, centralizing common resources."
  },
  {
    "name": "Chapter 01: Hello World",
    "description": "Code and tests for the first chapter, focusing on basic Python program structure, arguments, and output.",
    "fileStructure": [
      "01_hello/hello01_print.py",
      "01_hello/hello02_comment.py",
      "01_hello/hello03_shebang.py",
      "01_hello/hello04_argparse_positional.py",
      "01_hello/hello05_argparse_option.py",
      "01_hello/hello06_main_function.py",
      "01_hello/hello07_get_args.py",
      "01_hello/hello08_formatted.py",
      "01_hello/Makefile",
      "01_hello/README.md",
      "01_hello/test.py"
    ],
    "returnPrompt": "Access Chapter 01: Hello World project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 02: Crow's Nest",
    "description": "Contains the solution and tests for the 'Crow's Nest' exercise, which involves formatting output strings based on a single argument.",
    "fileStructure": [
      "02_crowsnest/all_test.sh",
      "02_crowsnest/Makefile",
      "02_crowsnest/README.md",
      "02_crowsnest/solution.py",
      "02_crowsnest/test.py"
    ],
    "returnPrompt": "Access Chapter 02: Crow's Nest project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 03: Picnic",
    "description": "Code and tests for the 'Picnic' challenge, demonstrating how to handle multiple string arguments and format results dynamically.",
    "fileStructure": [
      "03_picnic/all_test.sh",
      "03_picnic/Makefile",
      "03_picnic/README.md",
      "03_picnic/solution.py",
      "03_picnic/test.py"
    ],
    "returnPrompt": "Access Chapter 03: Picnic project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 04: Jump The Five",
    "description": "Various solutions and tests for the 'Jump The Five' encoding algorithm, utilizing dictionaries for character translation.",
    "fileStructure": [
      "04_jump_the_five/all_test.sh",
      "04_jump_the_five/Makefile",
      "04_jump_the_five/README.md",
      "04_jump_the_five/solution1.py",
      "04_jump_the_five/solution2.py",
      "04_jump_the_five/solution3.py",
      "04_jump_the_five/solution4.py",
      "04_jump_the_five/solution5.py",
      "04_jump_the_five/test.py"
    ],
    "returnPrompt": "Access Chapter 04: Jump The Five project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 05: Howler",
    "description": "Files for the 'Howler' program, which processes text input from command line or files and directs output to STDOUT or a file.",
    "fileStructure": [
      "05_howler/.gitignore",
      "05_howler/all_test.sh",
      "05_howler/Makefile",
      "05_howler/mk-test-out.sh",
      "05_howler/README.md",
      "05_howler/solution1.py",
      "05_howler/solution2.py",
      "05_howler/test.py",
      "05_howler/test-outs/preamble.txt",
      "05_howler/test-outs/sonnet-29.txt",
      "05_howler/test-outs/the-bustle.txt"
    ],
    "returnPrompt": "Access Chapter 05: Howler project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 06: Word Count",
    "description": "Implementation and tests for a program emulating the 'wc' (word count) utility, processing multiple file inputs or STDIN.",
    "fileStructure": [
      "06_wc/all_test.sh",
      "06_wc/Makefile",
      "06_wc/README.md",
      "06_wc/solution.py",
      "06_wc/test.py",
      "06_wc/inputs/empty.txt",
      "06_wc/inputs/foo.txt",
      "06_wc/inputs/one.txt",
      "06_wc/inputs/two.txt"
    ],
    "returnPrompt": "Access Chapter 06: Word Count project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 07: Gashlycrumb",
    "description": "Code for building and using a lookup table from an input file to translate values, with multiple solution approaches.",
    "fileStructure": [
      "07_gashlycrumb/all_test.sh",
      "07_gashlycrumb/alternate.txt",
      "07_gashlycrumb/gashlycrumb.txt",
      "07_gashlycrumb/gashlycrumb_interactive.py",
      "07_gashlycrumb/Makefile",
      "07_gashlycrumb/README.md",
      "07_gashlycrumb/solution1.py",
      "07_gashlycrumb/solution2_dict_comp.py",
      "07_gashlycrumb/solution3_dict_get.py",
      "07_gashlycrumb/test.py"
    ],
    "returnPrompt": "Access Chapter 07: Gashlycrumb project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 08: Apples and Bananas",
    "description": "Various implementations and tests for finding and replacing string elements, exploring different Python techniques like loops, comprehensions, and map().",
    "fileStructure": [
      "08_apples_and_bananas/all_test.sh",
      "08_apples_and_bananas/Makefile",
      "08_apples_and_bananas/README.md",
      "08_apples_and_bananas/solution1_iterate_chars.py",
      "08_apples_and_bananas/solution2_str_replace.py",
      "08_apples_and_bananas/solution3_str_translate.py",
      "08_apples_and_bananas/solution4_list_comprehension.py",
      "08_apples_and_bananas/solution5.1_no_closure.py",
      "08_apples_and_bananas/solution5_list_comp_function.py",
      "08_apples_and_bananas/solution6_map_lambda.py",
      "08_apples_and_bananas/solution7_map_function.py",
      "08_apples_and_bananas/solution8_regex.py",
      "08_apples_and_bananas/test.py"
    ],
    "returnPrompt": "Access Chapter 08: Apples and Bananas project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 09: Abuse",
    "description": "Program to generate Shakespearean insults using random combinations of adjectives and nouns, focusing on randomness and seeds.",
    "fileStructure": [
      "09_abuse/all_test.sh",
      "09_abuse/Makefile",
      "09_abuse/README.md",
      "09_abuse/solution.py",
      "09_abuse/test.py"
    ],
    "returnPrompt": "Access Chapter 09: Abuse project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 10: Telephone",
    "description": "Explores probabilistic and deterministic methods for randomly mutating strings, complete with solutions and tests.",
    "fileStructure": [
      "10_telephone/all_test.sh",
      "10_telephone/Makefile",
      "10_telephone/README.md",
      "10_telephone/solution1.py",
      "10_telephone/solution2_list.py",
      "10_telephone/test.py"
    ],
    "returnPrompt": "Access Chapter 10: Telephone project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 11: Bottles of Beer",
    "description": "Code and resources for generating verses of the '99 Bottles of Beer' song, focusing on counting down and string formatting.",
    "fileStructure": [
      "11_bottles_of_beer/all_test.sh",
      "11_bottles_of_beer/Makefile",
      "11_bottles_of_beer/mk-sums.sh",
      "11_bottles_of_beer/README.md",
      "11_bottles_of_beer/solution.py",
      "11_bottles_of_beer/sums.txt",
      "11_bottles_of_beer/test.py"
    ],
    "returnPrompt": "Access Chapter 11: Bottles of Beer project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 12: Ransom",
    "description": "Various Python solutions for randomly capitalizing letters in text to create a ransom note, demonstrating loops and comprehensions.",
    "fileStructure": [
      "12_ransom/all_test.sh",
      "12_ransom/Makefile",
      "12_ransom/README.md",
      "12_ransom/solution1_for_loop.py",
      "12_ransom/solution2_for_append_list.py",
      "12_ransom/solution3_for_append_string.py",
      "12_ransom/solution4_list_comprehension.py",
      "12_ransom/solution5_shorter_list_comp.py",
      "12_ransom/solution6_map.py",
      "12_ransom/solution7_shorter_map.py",
      "12_ransom/test.py"
    ],
    "returnPrompt": "Access Chapter 12: Ransom project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 13: Twelve Days of Christmas",
    "description": "Python program to generate verses for 'The Twelve Days of Christmas', exploring functions, list comprehensions, and map().",
    "fileStructure": [
      "13_twelve_days/all_test.sh",
      "13_twelve_days/Makefile",
      "13_twelve_days/mk-outs.sh",
      "13_twelve_days/README.md",
      "13_twelve_days/solution.py",
      "13_twelve_days/solution_emoji.py",
      "13_twelve_days/test.py",
      "13_twelve_days/test-out/1.out",
      "13_twelve_days/test-out/10.out",
      "13_twelve_days/test-out/11.out",
      "13_twelve_days/test-out/12.out",
      "13_twelve_days/test-out/2.out",
      "13_twelve_days/test-out/3.out",
      "13_twelve_days/test-out/4.out",
      "13_twelve_days/test-out/5.out",
      "13_twelve_days/test-out/6.out",
      "13_twelve_days/test-out/7.out",
      "13_twelve_days/test-out/8.out",
      "13_twelve_days/test-out/9.out"
    ],
    "returnPrompt": "Access Chapter 13: Twelve Days of Christmas project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure. Test output files are included as they are directly related to verifying the solution."
  },
  {
    "name": "Chapter 14: The Rhymer",
    "description": "Solutions for a program that generates rhyming words by manipulating word stems, focusing on regular expressions and list comprehensions.",
    "fileStructure": [
      "14_rhymer/all_test.sh",
      "14_rhymer/Makefile",
      "14_rhymer/README.md",
      "14_rhymer/solution1_regex.py",
      "14_rhymer/solution2_no_regex.py",
      "14_rhymer/solution3_dict_words.py",
      "14_rhymer/test.py"
    ],
    "returnPrompt": "Access Chapter 14: The Rhymer project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 15: The Kentucky Friar",
    "description": "Deep dive into regular expressions for text transformation, specifically to 'Kentucky fry' words in a body of text.",
    "fileStructure": [
      "15_kentucky_friar/all_test.sh",
      "15_kentucky_friar/Makefile",
      "15_kentucky_friar/mk-outs.sh",
      "15_kentucky_friar/README.md",
      "15_kentucky_friar/solution1_regex.py",
      "15_kentucky_friar/solution2_re_compile.py",
      "15_kentucky_friar/solution3_no_regex.py",
      "15_kentucky_friar/test.py",
      "15_kentucky_friar/inputs/banner.txt",
      "15_kentucky_friar/inputs/banner.txt.out",
      "15_kentucky_friar/inputs/blake.txt",
      "15_kentucky_friar/inputs/blake.txt.out",
      "15_kentucky_friar/inputs/dickinson.txt",
      "15_kentucky_friar/inputs/dickinson.txt.out",
      "15_kentucky_friar/inputs/raven.txt",
      "15_kentucky_friar/inputs/raven.txt.out",
      "15_kentucky_friar/inputs/shakespeare.txt",
      "15_kentucky_friar/inputs/shakespeare.txt.out"
    ],
    "returnPrompt": "Access Chapter 15: The Kentucky Friar project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure. Input and output text files are included as they are integral to testing and understanding the text transformations."
  },
  {
    "name": "Chapter 16: The Scrambler",
    "description": "Code for scrambling letters within words in a text while keeping the first and last letters fixed, using regex and random functions.",
    "fileStructure": [
      "16_scrambler/all_test.sh",
      "16_scrambler/intro.txt",
      "16_scrambler/Makefile",
      "16_scrambler/README.md",
      "16_scrambler/solution.py",
      "16_scrambler/test.py"
    ],
    "returnPrompt": "Access Chapter 16: The Scrambler project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 17: Mad Libs",
    "description": "Implementation of the classic Mad Libs game, featuring input processing, regular expressions for placeholder replacement, and interactive prompts.",
    "fileStructure": [
      "17_mad_libs/all_test.sh",
      "17_mad_libs/Makefile",
      "17_mad_libs/README.md",
      "17_mad_libs/solution1_regex.py",
      "17_mad_libs/solution2_no_regex.py",
      "17_mad_libs/test.py",
      "17_mad_libs/inputs/fox.txt",
      "17_mad_libs/inputs/help.txt",
      "17_mad_libs/inputs/no_blanks.txt",
      "17_mad_libs/inputs/romeo_juliet.txt"
    ],
    "returnPrompt": "Access Chapter 17: Mad Libs project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure. Input text files are included as they are central to the game's functionality."
  },
  {
    "name": "Chapter 18: Gematria",
    "description": "Contains the code and tests for the Gematria exercise, which likely involves numerical values of letters or words.",
    "fileStructure": [
      "18_gematria/all_test.sh",
      "18_gematria/asciitbl.py",
      "18_gematria/Makefile",
      "18_gematria/README.md",
      "18_gematria/solution.py",
      "18_gematria/test.py",
      "18_gematria/words.txt"
    ],
    "returnPrompt": "Access Chapter 18: Gematria project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 19: WOD",
    "description": "Multiple solutions and extensive test cases for a 'Workout of the Day' program, demonstrating various parsing and data handling techniques.",
    "fileStructure": [
      "19_wod/all_test.sh",
      "19_wod/Makefile",
      "19_wod/manual1.py",
      "19_wod/manual2_list_comprehension.py",
      "19_wod/manual3_map.py",
      "19_wod/README.md",
      "19_wod/requirements.txt",
      "19_wod/solution1.py",
      "19_wod/solution2.py",
      "19_wod/test.py",
      "19_wod/unit.py",
      "19_wod/using_csv1.py",
      "19_wod/using_csv2.py",
      "19_wod/using_csv3.py",
      "19_wod/using_pandas.py",
      "19_wod/inputs/bad-delimiter.tab",
      "19_wod/inputs/bad-empty.csv",
      "19_wod/inputs/bad-headers-only.csv",
      "19_wod/inputs/bad-headers.csv",
      "19_wod/inputs/bad-reps.csv",
      "19_wod/inputs/exercises.csv",
      "19_wod/inputs/silly-exercises.csv"
    ],
    "returnPrompt": "Access Chapter 19: WOD project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure. Multiple solution files and input data files are grouped as they are variations and test cases for this specific problem."
  },
  {
    "name": "Chapter 20: Password Generator",
    "description": "Code for generating passwords using word lists, demonstrating file reading and modular organization of word categories.",
    "fileStructure": [
      "20_password/all_test.sh",
      "20_password/harvest.py",
      "20_password/Makefile",
      "20_password/README.md",
      "20_password/solution.py",
      "20_password/test.py",
      "20_password/unit.py",
      "20_password/const/adjs.txt",
      "20_password/const/nouns.txt",
      "20_password/const/verbs.txt",
      "20_password/scarlet/adjs.txt",
      "20_password/scarlet/nouns.txt",
      "20_password/scarlet/verbs.txt",
      "20_password/sonnets/adjs.txt",
      "20_password/sonnets/nouns.txt",
      "20_password/sonnets/verbs.txt"
    ],
    "returnPrompt": "Access Chapter 20: Password Generator project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure. Word list files are included as they are essential data for the password generation."
  },
  {
    "name": "Chapter 21: Tic Tac Toe",
    "description": "Initial solutions and tests for a Tic Tac Toe game, covering game logic and state management.",
    "fileStructure": [
      "21_tictactoe/all_test.sh",
      "21_tictactoe/Makefile",
      "21_tictactoe/README.md",
      "21_tictactoe/solution1.py",
      "21_tictactoe/solution2.py",
      "21_tictactoe/test.py",
      "21_tictactoe/unit.py"
    ],
    "returnPrompt": "Access Chapter 21: Tic Tac Toe project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure."
  },
  {
    "name": "Chapter 22: Interactive Tic Tac Toe",
    "description": "Further development of the Tic Tac Toe game, focusing on interactive play and demonstrating the use of type hints.",
    "fileStructure": [
      "22_itictactoe/Makefile",
      "22_itictactoe/README.md",
      "22_itictactoe/solution1.py",
      "22_itictactoe/solution2_typed_dict.py",
      "22_itictactoe/typehints.py",
      "22_itictactoe/typehints2.py",
      "22_itictactoe/unit.py"
    ],
    "returnPrompt": "Access Chapter 22: Interactive Tic Tac Toe project.",
    "assumptions": "This directory represents a self-contained programming exercise as described in the book's chapter structure, building upon the previous Tic Tac Toe chapter."
  }
]